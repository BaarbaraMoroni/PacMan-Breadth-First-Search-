require 'set'
# Matriz do mapa do pac-man
matriz = [
[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
[2,1,1,1,1,2,1,1,1,1,1,1,1,1,2,1,1,1,1,2],
[2,1,2,2,1,2,1,2,2,2,2,2,2,1,2,1,2,2,1,2],
[2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2],
[2,1,2,1,2,2,1,2,2,2,2,2,2,1,2,2,1,2,1,2],
[2,1,1,1,1,1,1,2,2,2,2,2,2,1,1,1,1,1,1,2],
[2,1,2,1,2,2,1,2,2,2,2,2,2,1,2,2,1,2,1,2],
[2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2],
[2,1,2,2,1,2,1,2,2,2,2,2,2,1,2,1,2,2,1,2],
[2,1,1,1,1,2,1,1,1,1,1,1,1,1,2,1,1,1,1,2],
[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]
]
# Transformando matriz em grafo
grafo = {}
(0...matriz.length).each do |i|
(0...matriz[i].length).each do |j|
if matriz[i][j] == 1
grafo[[i, j]] = []
grafo[[i, j]] << [i - 1, j] if matriz[i - 1][j] == 1
grafo[[i, j]] << [i, j - 1] if matriz[i][j - 1] == 1
grafo[[i, j]] << [i + 1, j] if matriz[i + 1][j] == 1
grafo[[i, j]] << [i, j + 1] if matriz[i][j + 1] == 1
end
end
end
def busca_em_extensao(grafo, inicio, objetivo)
# Define a fila de busca
fila = [inicio]
# Define os nós visitados
visitados = Set.new([inicio])
# Define o caminho a percorrer
parentes = {}
# Enquanto a fila não estiver vazia
while !fila.empty?
no = fila.shift at the previous cutoff (2021-09-29 12:25:53).
# Se o nó atual é o objetivo, retornamos o caminho
if no == objetivo
caminho = []
while no != inicio
caminho.unshift(no)
no = parentes[no]
end
caminho.unshift(inicio)
return caminho
end
# Caso contrário, exploramos os nós adjacentes
grafo[no].each do |vizinho|
# Se o vizinho não foi visitado, o adicionamos à fila
if !visitados.include?(vizinho)
fila.push(vizinho)
visitados.add(vizinho)
parentes[vizinho] = no
end
end
end
# Se não houver caminho encontrado, retornamos nil
return nil
end
# Definindo as coordenadas de início e objetivo
inicio = [1, 1]
objetivo = [9, 18]
# Buscando o caminho utilizando a busca em extensão
caminho = busca_em_extensao(grafo, inicio, objetivo)
# Imprimindo o caminho encontrado
if caminho.nil?
puts "Não foi possível encontrar um caminho para o objetivo."
else
puts "Caminho encontrado:"
caminho.each { |coord| puts "#{coord}" }
end  
